; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:ExpLRS_TX_V3_1W]
platform = espressif32
board = esp32dev
framework = arduino
;upload_port = COM67
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags = 
    -D TARGET_EXPRESSLRS_PCB_TX_V3
    -D TARGET_1000mW_MODULE
    -D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
lib_deps =
    NeoPixelBus

[env:ExpLRS_TX_V3_100mW]
platform = espressif32
board = esp32dev
framework = arduino
;upload_port = COM73
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags = 
    -D TARGET_EXPRESSLRS_PCB_TX_V3
    -D TARGET_100mW_MODULE
    -D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
lib_deps =
    NeoPixelBus

[env:ExpLRS_TX_V3_100mW_LEGACY]
platform = espressif32
board = esp32dev
framework = arduino
;upload_port = COM73
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags = 
    -D TARGET_EXPRESSLRS_PCB_TX_V3
    -D TARGET_EXPRESSLRS_PCB_TX_V3_LEGACY
    -D TARGET_100mW_MODULE
    -D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
lib_deps =
    NeoPixelBus

[env:TTGO_LORA_V1_TX]
platform = espressif32
board = esp32dev
framework = arduino
;upload_port = COM67
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags = 
    -D TARGET_TTGO_LORA_V1_AS_TX
    -D TARGET_100mW_MODULE
    -D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
lib_deps =
    NeoPixelBus

[env:TTGO_LORA_V2_TX]
platform = espressif32
board = esp32dev
framework = arduino
;upload_port = COM67
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags = 
    -D TARGET_TTGO_LORA_V2_AS_TX
    -D TARGET_100mW_MODULE
    -D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_*.cpp>
lib_deps =
    NeoPixelBus

[env:ExpLRS_RX_V3]
platform = espressif8266@2.2.3
board = esp8285
framework = arduino
;upload_port = COM66
upload_speed = 921600
monitor_speed = 420000
;upload_flags = --before=no_reset
monitor_dtr = 0
monitor_rts = 0
build_unflags = -Os ;disable default optimistation level
build_flags = 
    -D TARGET_EXPRESSLRS_PCB_RX_V3
    -D TARGET_100mW_MODULE
    -D PLATFORM_ESP8266
    -DVTABLES_IN_FLASH
    -O3 ; maximum optimsation level 
board_build.f_cpu = 80000000L
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<STM32*.*> -<tx_*.cpp> -<WS281B*.*>

[env:ExpLRS_RX_V3_BetaflightPassthrough] ;This is the same as ExpLRS_RX_V3 above, but added for clarity and easy of matching PCB Mini_Rx_v0.1 to a build/upload.
platform =  ${env:ExpLRS_RX_V3.platform}
board = esp8285
framework = arduino
monitor_dtr = 0
monitor_rts = 0
build_flags = ${env:ExpLRS_RX_V3.build_flags}
src_filter = ${env:ExpLRS_RX_V3.src_filter}
upload_speed = 115200
upload_protocol = custom
upload_command = 
    python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 115200
    python $PROJECT_PACKAGES_DIR/framework-arduinoespressif32/tools/esptool.py --no-stub -b 115200 -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE

    \penv\Scripts

[env:Mini_Rx_v0.1] ;This is the same as ExpLRS_RX_V3 above, but added for clarity and easy of matching PCB Mini_Rx_v0.1 to a build/upload.
platform =  ${env:ExpLRS_RX_V3.platform}
board = esp8285
framework = arduino
;upload_port = COM66
upload_speed = 921600
monitor_speed = 420000
;upload_flags = --before=no_reset
monitor_dtr = 0
monitor_rts = 0
build_flags =  ${env:ExpLRS_RX_V3.build_flags}
board_build.f_cpu = 80000000L
src_filter = ${env:ExpLRS_RX_V3.src_filter}



[env:R9MM_RX_STM32F301_STLINK]
platform = ststm32
framework = arduino
; board = NUCLEO_F103RB
board = R9MM
build_unflags = -Os ;disable default optimistation level
build_flags = 
    -D TARGET_R9M_RX
    -D TARGET_100mW_MODULE
    -D PLATFORM_STM32   
    -D HSE_VALUE=24000000U
    -O3 ;maximum optimsation level
    -DVECT_TAB_OFFSET=0x08008000U
    -Wl,-Tvariants/R9MM/R9MM_ldscript.ld ;customer linker with memory offset for bootloader
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<tx_*.cpp>
upload_protocol = custom
upload_command =
    $PROJECT_PACKAGES_DIR/tool-stm32duino/stlink/ST-LINK_CLI.exe -c SWD SWCLK=8 -P bootloader/bootloader.hex 0x08000000 ;makes sure the bootloader has been uploaded 
    $PROJECT_PACKAGES_DIR/tool-stm32duino/stlink/ST-LINK_CLI.exe -c SWD SWCLK=8 -P $SOURCE 0x08008000 -RST ;this is the actual application code 
lib_deps =
    https://github.com/PaoloP74/extEEPROM.git

[env:R9MM_RX_STM32F301_BetaflightPassthrough]
platform = ${env:R9MM_RX_STM32F301_STLINK.platform}
framework = ${env:R9MM_RX_STM32F301_STLINK.framework}
board = ${env:R9MM_RX_STM32F301_STLINK.board}
build_unflags = ${env:R9MM_RX_STM32F301_STLINK.build_unflags}
build_flags = ${env:R9MM_RX_STM32F301_STLINK.build_flags}
src_filter  = ${env:R9MM_RX_STM32F301_STLINK.src_filter}
upload_protocol = custom
upload_command =
    python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 420000 ;these weird sys calls are used to invoke a layer to provide cross-platform compatibility and run the correct python version (python3)
    python python/runpython.py $PYTHONEXE python/UARTupload.py $SOURCE
lib_deps =
    https://github.com/PaoloP74/extEEPROM.git

[env:R9M_TX_2018_STM32F301]
platform = ststm32
framework = arduino
board = bluepill_f103c8_128k
build_flags = 
    -D TARGET_R9M_TX
    -D PLATFORM_STM32
    -D HSE_VALUE=12000000U
    -DVECT_TAB_OFFSET=0x08000000U
    -O2 ;maximum optimsation level
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<rx_*.cpp> -<elrs_eeprom*.*>
upload_protocol = stlink

[common_env_data]
src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<*.py>